apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aws-thanosql.fullname" . }}-lab
  labels:
    {{- include "aws-thanosql.labels" . | nindent 4 }}
    app.name: {{ include "aws-thanosql.fullname" . }}-lab
spec:
  replicas: {{ .Values.jupyterlab.replicaCount }}
  selector:
    matchLabels:
      {{- include "aws-thanosql.selectorLabels" . | nindent 6 }}
      app.name: {{ include "aws-thanosql.fullname" . }}-lab
  template:
    metadata:
      labels:
        {{- include "aws-thanosql.selectorLabels" . | nindent 8 }}
        app.name: {{ include "aws-thanosql.fullname" . }}-lab
    spec:
      tolerations:
      - key: "type"
        operator: "Equal"
        value: "workspace"
        effect: "NoSchedule"
      dnsPolicy: Default
      securityContext:
        runAsUser: 0
        fsGroup: 0
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - {{ .Values.nodeName }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.jupyterlab.image.repository }}:{{ .Values.jupyterlab.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.jupyterlab.image.pullPolicy }}
          command: {{ .Values.jupyterlab.image.command | indent 4 }}
          ports:
            - name: http
              containerPort: {{ .Values.jupyterlab.image.port }}
          resources:
            {{- toYaml .Values.jupyterlab.resources | nindent 12 }}
          volumeMounts: 
            - mountPath: /home/jovyan
              name: {{ include "aws-thanosql.fullname" . }}-volume
          envFrom:
            - configMapRef:
                name: {{ include "aws-thanosql.fullname" . }}-lab
      initContainers:
      - name: init-permissions
        image: stevensjcho/acl:0.0.2
        command: ['bash', '-c']
        args:
          - | 
            chown 1000:100 /data;
            chmod g+s /data;
            setfacl -d -m u::rwx /data;
            setfacl -d -m g::rwx /data;
            setfacl -d -m o::rx /data;
            mkdir -p /data/.cache/huggingface; 
            chown 1000:100 /data/.cache; 
            chown 999:100 /data/.cache/huggingface; 
            mkdir /data/examples; cd /data/examples; 
            wget https://raw.githubusercontent.com/smartmind-team/mintlify-docs/main/examples/AICC_Scenario.ipynb; 
            wget https://raw.githubusercontent.com/smartmind-team/mintlify-docs/main/examples/Image_Retrieval.ipynb; 
            wget https://raw.githubusercontent.com/smartmind-team/mintlify-docs/main/examples/Review_Analytics.ipynb; 
            chown 1000:100 -R /data/examples
          volumeMounts:
        - name: {{ include "aws-thanosql.fullname" . }}-volume
          mountPath: /data
      volumes: 
        - name: {{ include "aws-thanosql.fullname" . }}-volume
          persistentVolumeClaim:
            claimName: {{ include "aws-thanosql.fullname" . }}-claim